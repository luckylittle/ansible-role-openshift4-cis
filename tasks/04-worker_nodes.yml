---
  # Worker Node Configuration Files

- name: 4.1.1 | Ensure that the kubelet service file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a /etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
  # 644
  tags:
    - "4"
    - "scored"
    - "level_1"

- name: 4.1.2 | Ensure that the kubelet service file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G /etc/systemd/system/kubelet.service.d/10-kubeadm.conf"
  # root:root
  tags:
    - "4"
    - "scored"
    - "level_1"

- name: 4.1.3 | Ensure that the proxy kubeconfig file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a {{ proxy_kubeconfig_file }}"
  # "ps -ef | grep kube-proxy" and look for --kubeconfig which is the proxy_kubeconfig_file above
  # 644
  tags:
    - "4"
    - "scored"
    - "level_1"

- name: 4.1.4 | Ensure that the proxy kubeconfig file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G {{ proxy_kubeconfig_file }}"
  # root:root
  tags:
    - ""

- name: 4.1.5 | Ensure that the kubelet.conf file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a /etc/kubernetes/kubelet.conf"
  # 644
  tags:
    - ""

- name: 4.1.6 | Ensure that the kubelet.conf file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G /etc/kubernetes/kubelet.conf"
  # root:root
  tags:
    - ""

- name: 4.1.7 | Ensure that the certificate authorities file permissions are set to 644 or more restrictive (Scored)
  share: "stat -c %a {{ client_ca_file }}"
  # "ps -ef | grep kube-proxy" and look for --client-ca-file argument
  # 644
  tags:
    - ""

- name: 4.1.8 | Ensure that the client certificate authorities file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G {{ client_ca_file }}"
  # root:root
  tags:
    - ""

- name: 4.1.9 | Ensure that the kubelet configuration file has permissions set to 644 or more restrictive (Scored)
  shell: "stat -c %a {{ kubelet_config }}"
  # "ps -ef | grep kubelet | grep config" gives the location of the Kubelet config file
  # 644
  tags:
    - ""

- name: 4.1.10 | Ensure that the kubelet configuration file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G {{ kubelet_config }}"
  # root:root
  tags:
    - ""

  # Kubelet
  # Find
- name: 4.2.1 | Ensure that the anonymous-auth argument is set to false (Scored)
  shell: "ps -ef | grep kubelet"
  # --anonymous-auth argument is set to false or authentication: anonymous: enabled to false
  tags:
    - ""

- name: 4.2.2 | Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)
  shell: "ps -ef | grep kubelet"
  # --authorization-mode argument is present, check that it is not set to AlwaysAllow
  tags:
    - ""

- name: 4.2.3 | Ensure that the --client-ca-file argument is set as appropriate (Scored)
  shell: "ps -ef | grep kubelet"
  # --client-ca-file argument exists and is set to the location of the client certificate authority file
  tags:
    - ""

- name: 4.2.4 | Ensure that the --read-only-port argument is set to 0 (Scored)
  shell: "ps -ef | grep kubelet"
  # --read-only-port argument exists and is set to 0
  tags:
    - ""

- name: 4.2.5 | Ensure that the --streaming-connection-idle-timeout argument is not set to 0 (Scored)
  shell: "ps -ef | grep kubelet"
  # --streaming-connection-idle-timeout argument is not set to 0
  tags:
    - ""

- name: 4.2.6 | Ensure that the --protect-kernel-defaults argument is set to true (Scored)
  shell: "ps -ef | grep kubelet"
  # --protect-kernel-defaults argument is set to true
  tags:
    - ""

- name: 4.2.7 | Ensure that the --make-iptables-util-chains argument is set to true (Scored)
  shell: "ps -ef | grep kubelet"
  # --make-iptables-util-chains argument exists then it is set to true
  tags:
    - ""

- name: 4.2.8 | Ensure that the --hostname-override argument is not set (Not Scored)
  shell: "ps -ef | grep kubelet"
  # --hostname-override argument does not exist
  # config: none
  tags:
    - ""

- name: 4.2.9 | Ensure that the --event-qps argument is set to 0 or a level which ensures appropriate event capture (Not Scored)
  shell: "ps -ef | grep kubelet"
  # --event-qps argument and determine whether this has been set to an appropriate level for the cluster
  # config: eventRecordQPS:
  tags:
    - ""
    - "level_2"

- name: 4.2.10 | Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (Scored)
  shell: "ps -ef | grep kubelet"
  # --tls-cert-file and --tls-private-key-file arguments exist and they are set as appropriate
  # config: tlsCertFile and tlsPrivateKeyFile
  tags:
    - ""

- name: 4.2.11 | Ensure that the --rotate-certificates argument is not set to false (Scored)
  shell: "ps -ef | grep kubelet"
  # --rotate-certificates argument is not present, or is set to true
  # config: rotateCertificates must not be false
  tags:
    - ""

- name: 4.2.12 | Ensure that the RotateKubeletServerCertificate argument is set to true (Scored)
  shell: "ps -ef | grep kubelet"
  # --feature-gates=RotateKubeletServerCertificate is set to true
  tags:
    - ""

- name: 4.2.13 | Ensure that the Kubelet only makes use of Strong Cryptographic Ciphers (Not Scored)
  shell: "ps -ef | grep kubelet"
  # --tls-cipher-suites argument is present, ensure it only contains:
  # TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
  # TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
  # TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
  # TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
  # TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
  # TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
  # TLS_RSA_WITH_AES_256_GCM_SHA384
  # TLS_RSA_WITH_AES_128_GCM_SHA256
  # config: TLSCipherSuites
  tags:
    - ""

# when: inventory_hostname in groups['workers']
