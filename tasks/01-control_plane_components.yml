---
- name: 1.1.1 | Ensure that the API server pod specification file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a /etc/kubernetes/manifests/kube-apiserver.yaml"
  # 644
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.2 | Ensure that the API server pod specification file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G /etc/kubernetes/manifests/kube-apiserver.yaml"
  # root:root
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.3 | Ensure that the controller manager pod specification file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a /etc/kubernetes/manifests/kube-controller-manager.yaml"
  # 644
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.4 | Ensure that the controller manager pod specification file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G /etc/kubernetes/manifests/kube-controller-manager.yaml"
  # root:root
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.5 | Ensure that the scheduler pod specification file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a /etc/kubernetes/manifests/kube-scheduler.yaml"
  # 644
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.6 | Ensure that the scheduler pod specification file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G /etc/kubernetes/manifests/kube-scheduler.yaml"
  # root:root
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.7 | Ensure that the etcd pod specification file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a /etc/kubernetes/manifests/etcd.yaml"
  # 644
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.8 | Ensure that the etcd pod specification file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G /etc/kubernetes/manifests/etcd.yaml"
  # root:root
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.9 | Ensure that the Container Network Interface file permissions are set to 644 or more restrictive (Not Scored)
  shell: "stat -c %a {{ path_to_cni_files }}"
  # 644
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.1.10 | Ensure that the Container Network Interface file ownership is set to root:root (Not Scored)
  shell: "stat -c %U:%G {{ path_to_cni_files }}"
  # root:root
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.1.11 | Ensure that the etcd data directory permissions are set to 700 or more restrictive (Scored)
  shell: "stat -c %a /var/lib/etcd"
  # 700
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.12 | Ensure that the etcd data directory ownership is set to etcd:etcd (Scored)
  shell: "stat -c %U:%G /var/lib/etcd"
  # etcd:etcd
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.13 | Ensure that the admin.conf file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a /etc/kubernetes/admin.conf"
  # 644
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.14 | Ensure that the admin.conf file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G /etc/kubernetes/admin.conf"
  # root:root
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.15 | Ensure that the scheduler.conf file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a /etc/kubernetes/scheduler.conf"
  # 644
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.16 | Ensure that the scheduler.conf file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G /etc/kubernetes/scheduler.conf"
  # root:root
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.17 | Ensure that the controller-manager.conf file permissions are set to 644 or more restrictive (Scored)
  shell: "stat -c %a /etc/kubernetes/controller-manager.conf"
  # 644
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.18 | Ensure that the controller-manager.conf file ownership is set to root:root (Scored)
  shell: "stat -c %U:%G /etc/kubernetes/controller-manager.conf"
  # root:root
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.19 | Ensure that the Kubernetes PKI directory and file ownership is set to root:root (Scored)
  shell: "ls -laR /etc/kubernetes/pki/"
  # all files and dirs are root:root
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.1.20 | Ensure that the Kubernetes PKI certificate file permissions are set to 644 or more restrictive (Not Scored)
  shell: "find /etc/kubernetes/pki -name "*.crt" | xargs stat -c '%n %a'"
  # 644
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.1.21 | Ensure that the Kubernetes PKI key file permissions are set to 600 (Not Scored)
  shell: "find /etc/kubernetes/pki -name "*.key" | xargs stat -c '%n %a'"
  # 600
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.2.1 | Ensure that the --anonymous-auth argument is set to false (Not Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --anonymous-auth argument is set to false
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.2.2 | Ensure that the --basic-auth-file argument is not set (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --basic-auth-file argument does not exist
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.3 | Ensure that the --token-auth-file parameter is not set (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --token-auth-file argument does not exist
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.4 | Ensure that the --kubelet-https argument is set to true (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --kubelet-https argument either does not exist or is set to true
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.5 | Ensure that the --kubelet-client-certificate and --kubelet-client-key arguments are set as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --kubelet-client-certificate and --kubelet-client-key arguments exist and they are set as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.6 | Ensure that the --kubelet-certificate-authority argument is set as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --kubelet-certificate-authority argument exists and is set as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.7 | Ensure that the --authorization-mode argument is not set to AlwaysAllow (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --authorization-mode argument exists and is not set to AlwaysAllow
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.8 | Ensure that the --authorization-mode argument includes Node (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --authorization-mode argument exists and is set to a value to include Node
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.9 | Ensure that the --authorization-mode argument includes RBAC (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --authorization-mode argument exists and is set to a value to include RBAC .
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.10 | Ensure that the admission control plugin EventRateLimit is set (Not Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --enable-admission-plugins argument is set to a value that includes EventRateLimit
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.2.11 | Ensure that the admission control plugin AlwaysAdmit is not set (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --enable-admission-plugins argument is set, its value does not include AlwaysAdmit
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.12 | Ensure that the admission control plugin AlwaysPullImages is set (Not Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --enable-admission-plugins argument is set to a value that includes AlwaysPullImages
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.2.13 | Ensure that the admission control plugin SecurityContextDeny is set if PodSecurityPolicy is not used (Not Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --enable-admission-plugins argument is set to a value that includes SecurityContextDeny, if PodSecurityPolicy is not included
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.2.14 | Ensure that the admission control plugin ServiceAccount is set (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --disable-admission-plugins argument is set to a value that does not includes ServiceAccount
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.15 | Ensure that the admission control plugin NamespaceLifecycle is set (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --disable-admission-plugins argument is set to a value that does not include NamespaceLifecycle
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.16 | Ensure that the admission control plugin PodSecurityPolicy is set (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --enable-admission-plugins argument is set to a value that includes PodSecurityPolicy
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.17 | Ensure that the admission control plugin NodeRestriction is set (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --enable-admission-plugins argument is set to a value that includes NodeRestriction
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.18 | Ensure that the --insecure-bind-address argument is not set (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --insecure-bind-address argument does not exist
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.19 | Ensure that the --insecure-port argument is set to 0 (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --insecure-port argument is set to 0
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.20 | Ensure that the --secure-port argument is not set to 0 (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --secure-port argument is either not set or is set to an integer value between 1 and 65535
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.21 | Ensure that the --profiling argument is set to false (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --profiling argument is set to false
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.22 | Ensure that the --audit-log-path argument is set (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --audit-log-path argument is set as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.23 | Ensure that the --audit-log-maxage argument is set to 30 or as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --audit-log-maxage argument is set to 30 or as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.24 | Ensure that the --audit-log-maxbackup argument is set to 10 or as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --audit-log-maxbackup argument is set to 10 or as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.25 | Ensure that the --audit-log-maxsize argument is set to 100 or as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --audit-log-maxsize argument is set to 100 or as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.26 | Ensure that the --request-timeout argument is set as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --request-timeout argument is either not set or set to an appropriate value
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.27 | Ensure that the --service-account-lookup argument is set to true (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --service-account-lookup argument exists it is set to true
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.28 | Ensure that the --service-account-key-file argument is set as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --service-account-key-file argument exists and is set as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.29 | Ensure that the --etcd-certfile and --etcd-keyfile arguments are set as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --etcd-certfile and --etcd-keyfile arguments exist and they are set as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.30 | Ensure that the --tls-cert-file and --tls-private-key-file arguments are set as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --tls-cert-file and --tls-private-key-file arguments exist and they are set as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.31 | Ensure that the --client-ca-file argument is set as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --client-ca-file argument exists and it is set as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.32 | Ensure that the --etcd-cafile argument is set as appropriate (Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --etcd-cafile argument exists and it is set as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.2.33 | Ensure that the --encryption-provider-config argument is set as appropriate (Not Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --encryption-provider-config argument is set to a EncryptionConfig file
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.2.34 | Ensure that encryption providers are appropriately configured (Not Scored)
  shell: "ps -ef | grep kube-apiserver"
  # EncryptionConfig file set for --encryption-provider-config argument
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.2.35 | Ensure that the API Server only makes use of Strong Cryptographic Ciphers (Not Scored)
  shell: "ps -ef | grep kube-apiserver"
  # --tls-cipher-suites argument is set
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.3.1 | Ensure that the --terminated-pod-gc-threshold argument is set as appropriate (Not Scored)
  shell: "ps -ef | grep kube-controller-manager"
  # --terminated-pod-gc-threshold argument is set as appropriate
  tags:
    - "1"
    - "not_scored"
    - "level_1"

- name: 1.3.2 | Ensure that the --profiling argument is set to false (Scored)
  shell: "ps -ef | grep kube-controller-manager"
  # --profiling argument is set to false
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.3.3 | Ensure that the --use-service-account-credentials argument is set to true (Scored)
  shell: "ps -ef | grep kube-controller-manager"
  # --use-service-account-credentials argument is set to true
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.3.4 | Ensure that the --service-account-private-key-file argument is set as appropriate (Scored)
  shell: "ps -ef | grep kube-controller-manager"
  # --service-account-private-key-file argument is set as appropriate
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.3.5 | Ensure that the --root-ca-file argument is set as appropriate (Scored)
  shell: "ps -ef | grep kube-controller-manager"
  # --root-ca-file argument exists and is set to a certificate bundle file
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.3.6 | Ensure that the RotateKubeletServerCertificate argument is set to true (Scored)
  shell: "ps -ef | grep kube-controller-manager"
  # --feature-gates=RotateKubeletServerCertificate=true
  tags:
    - "1"
    - "scored"
    - "level_2"

- name: 1.3.7 | Ensure that the --bind-address argument is set to 127.0.0.1 (Scored)
  shell: "ps -ef | grep kube-controller-manager"
  # --bind-address argument is set to 127.0.0.1
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.4.1 | Ensure that the --profiling argument is set to false (Scored)
  shell: "ps -ef | grep kube-scheduler"
  # --profiling argument is set to false
  tags:
    - "1"
    - "scored"
    - "level_1"

- name: 1.4.2 | Ensure that the --bind-address argument is set to 127.0.0.1 (Scored)
  shell: "ps -ef | grep kube-scheduler"
  # --bind-address argument is set to 127.0.0.1
  tags:
    - "1"
    - "scored"
    - "level_1"
